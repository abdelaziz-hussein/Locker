Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
                              ./LCD_PROG.o (__udivmodhi4)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              ./LOCKER_FUNS.o (__do_copy_data)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./DIO_PROG.o
LOAD ./GIE_PROC.o
LOAD ./I2C_PROG.o
LOAD ./LCD_PROG.o
LOAD ./LED_PROG.o
LOAD ./LOCKER_FUNS.o
LOAD ./main.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xbfe
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000076        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x0000007e        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x0000007e                __vector_1
                0x0000007e                __vector_12
                0x0000007e                __bad_interrupt
                0x0000007e                __vector_6
                0x0000007e                __vector_3
                0x0000007e                __vector_11
                0x0000007e                __vector_13
                0x0000007e                __vector_17
                0x0000007e                __vector_19
                0x0000007e                __vector_7
                0x0000007e                __vector_5
                0x0000007e                __vector_4
                0x0000007e                __vector_9
                0x0000007e                __vector_2
                0x0000007e                __vector_15
                0x0000007e                __vector_8
                0x0000007e                __vector_14
                0x0000007e                __vector_10
                0x0000007e                __vector_16
                0x0000007e                __vector_18
                0x0000007e                __vector_20
 .text          0x00000082        0x0 ./DIO_PROG.o
 .text          0x00000082        0x0 ./GIE_PROC.o
 .text          0x00000082        0x0 ./I2C_PROG.o
 .text          0x00000082        0x0 ./LCD_PROG.o
 .text          0x00000082        0x0 ./LED_PROG.o
 .text          0x00000082        0x0 ./LOCKER_FUNS.o
 .text          0x00000082        0x0 ./main.o
 .text          0x00000082        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
 .text          0x00000082        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000082        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000082                . = ALIGN (0x2)
 *(.text.*)
 .text.DIO_VoidInit
                0x00000082        0xe ./DIO_PROG.o
                0x00000082                DIO_VoidInit
 .text.DIO_VoidSetPin
                0x00000090      0x128 ./DIO_PROG.o
                0x00000090                DIO_VoidSetPin
 .text.DIO_U8GetPin
                0x000001b8       0x6c ./DIO_PROG.o
                0x000001b8                DIO_U8GetPin
 .text.GIE_voidEnable
                0x00000224        0x8 ./GIE_PROC.o
                0x00000224                GIE_voidEnable
 .text.I2C_voidInit
                0x0000022c       0x18 ./I2C_PROG.o
                0x0000022c                I2C_voidInit
 .text.I2C_voidClrFlag
                0x00000244        0x8 ./I2C_PROG.o
                0x00000244                I2C_voidClrFlag
 .text.I2C_voidMasterWrite
                0x0000024c       0x54 ./I2C_PROG.o
                0x0000024c                I2C_voidMasterWrite
 .text.I2C_U8MasterRead
                0x000002a0       0x4e ./I2C_PROG.o
                0x000002a0                I2C_U8MasterRead
 .text.I2C_U8SlaveRead
                0x000002ee       0x30 ./I2C_PROG.o
                0x000002ee                I2C_U8SlaveRead
 .text.I2C_voidSlaveWrite
                0x0000031e        0x2 ./I2C_PROG.o
                0x0000031e                I2C_voidSlaveWrite
 .text.I2C_voidMasterEEPROMWrite
                0x00000320       0xa6 ./I2C_PROG.o
                0x00000320                I2C_voidMasterEEPROMWrite
 .text.I2C_U8MasterEEPROMRead
                0x000003c6       0xa8 ./I2C_PROG.o
                0x000003c6                I2C_U8MasterEEPROMRead
 .text.LCD_voidEnable
                0x0000046e       0x2c ./LCD_PROG.o
                0x0000046e                LCD_voidEnable
 .text.LCD_voidWriteCommend
                0x0000049a       0x8c ./LCD_PROG.o
                0x0000049a                LCD_voidWriteCommend
 .text.LCD_voidReturnHome
                0x00000526        0x8 ./LCD_PROG.o
                0x00000526                LCD_voidReturnHome
 .text.LCD_voidClrScreen
                0x0000052e        0x8 ./LCD_PROG.o
                0x0000052e                LCD_voidClrScreen
 .text.LCD_voidGoToXY
                0x00000536       0x1c ./LCD_PROG.o
                0x00000536                LCD_voidGoToXY
 .text.LCD_voidInit
                0x00000552       0x4c ./LCD_PROG.o
                0x00000552                LCD_voidInit
 .text.LCD_voidWriteData
                0x0000059e       0x8c ./LCD_PROG.o
                0x0000059e                LCD_voidWriteData
 .text.LCD_voidWriteVariable
                0x0000062a       0x8e ./LCD_PROG.o
                0x0000062a                LCD_voidWriteVariable
 .text.LCD_voidWriteString
                0x000006b8       0x26 ./LCD_PROG.o
                0x000006b8                LCD_voidWriteString
 .text.LED_VoidInit
                0x000006de        0x2 ./LED_PROG.o
                0x000006de                LED_VoidInit
 .text.LED_VoidOff
                0x000006e0       0x24 ./LED_PROG.o
                0x000006e0                LED_VoidOff
 .text.LED_VoidOn
                0x00000704       0x24 ./LED_PROG.o
                0x00000704                LED_VoidOn
 .text.LOCKER_Check_Pass
                0x00000728      0x2aa ./LOCKER_FUNS.o
                0x00000728                LOCKER_Check_Pass
 .text.LOCKER_write_Pass
                0x000009d2       0xe0 ./LOCKER_FUNS.o
                0x000009d2                LOCKER_write_Pass
 .text.main     0x00000ab2      0x120 ./main.o
                0x00000ab2                main
 .text.libgcc   0x00000bd2       0x28 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
                0x00000bd2                __udivmodhi4
 .text.libgcc   0x00000bfa        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000bfa        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000bfa                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000bfa        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00000bfa                exit
                0x00000bfa                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000bfa        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00000bfe                _etext = .

.data           0x00800060       0xda load address 0x00000bfe
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./DIO_PROG.o
 .data          0x00800060        0x0 ./GIE_PROC.o
 .data          0x00800060        0x0 ./I2C_PROG.o
 .data          0x00800060        0x0 ./LCD_PROG.o
 .data          0x00800060        0x0 ./LED_PROG.o
 .data          0x00800060       0x64 ./LOCKER_FUNS.o
 .data          0x008000c4       0x76 ./main.o
 .data          0x0080013a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
 .data          0x0080013a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x0080013a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0080013a                . = ALIGN (0x2)
                0x0080013a                _edata = .
                0x0080013a                PROVIDE (__data_end, .)

.bss            0x0080013a        0x0
                0x0080013a                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080013a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x0080013a        0x0 ./DIO_PROG.o
 .bss           0x0080013a        0x0 ./GIE_PROC.o
 .bss           0x0080013a        0x0 ./I2C_PROG.o
 .bss           0x0080013a        0x0 ./LCD_PROG.o
 .bss           0x0080013a        0x0 ./LED_PROG.o
 .bss           0x0080013a        0x0 ./LOCKER_FUNS.o
 .bss           0x0080013a        0x0 ./main.o
 .bss           0x0080013a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
 .bss           0x0080013a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x0080013a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 *(.bss*)
 *(COMMON)
                0x0080013a                PROVIDE (__bss_end, .)
                0x00000bfe                __data_load_start = LOADADDR (.data)
                0x00000cd8                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080013a        0x0
                0x0080013a                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080013a                PROVIDE (__noinit_end, .)
                0x0080013a                _end = .
                0x0080013a                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(LOCKER_EEPROM.elf elf32-avr)
LOAD linker stubs
